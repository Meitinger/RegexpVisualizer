{"version":3,"sources":["parser.ts","visualizer.tsx","uikitloader.js","index.tsx"],"names":["MaxCharacter","defineCharSet","s","CharSet","fromCharacters","split","map","c","charCodeAt","sort","a","b","DigitsCharSet","WordCharSet","WhiteSpaceCharSet","quantify","nfa","min","max","result","copy","nfaFromCharSet","charSet","NFA","empty","maxCharacter","maximum","isEmpty","nodes","final","createNode","linkNodes","initial","makeFinal","charSetFromChar","char","Parser","P","STAR","PIPE","TILDE","PLUS","OPTIONAL","PARENTH_LEFT","PARENTH_RIGHT","BRACKET_LEFT","BRACKET_RIGHT","CARET","DASH","DOT","NON_META","ESCAPED_META","CLASSES","negate","Error","SPECIAL","parseInt","substring","SET_NON_META","SET_ESCAPED_META","regex","r","union","level3","left","right","intersection","level2","fromIntersection","concatenation","level1","append","star","plus","optional","level0","Infinity","group","text","any","positive_set","negative_set","_","all","set","set_concatenation","set_item","range","set_char","RangeError","charSetFromRange","Renderer","Viz","workerURL","Classes","Map","formatChar","number","toString","repeat","length","String","fromCharCode","formatCharSet","isAll","classes","largest","name","isSubsetOf","size","push","without","concat","ranges","join","Visualizer","graphHolder","useRef","useState","scale","setScale","graph","setGraph","undefined","error","setError","useEffect","cancel","renderSVGElement","toDot","then","element","catch","style","transformOrigin","transform","div","current","node","appendChild","removeChild","className","disabled","onClick","Math","overflow","ref","UIkit","use","Icons","App","setNfa","setText","test","useCallback","word","Array","i","type","onInput","e","tryParse","parse","currentTarget","value","isFinite","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc351d3c.chunk.js","sourcesContent":["/*\n * Regular Expression Visualizer\n * Copyright (C) 2021  Manuel Meitinger\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as P from \"parsimmon\"\nimport { CharSet, NFA } from \"refa\";\n\nconst MaxCharacter = 0xFFFF;\n\nfunction defineCharSet(s: string): CharSet {\n    return CharSet.fromCharacters(MaxCharacter, s.split('').map(c => c.charCodeAt(0)).sort((a, b) => a - b));\n}\n\nexport const DigitsCharSet = defineCharSet(\"0123456789\");\nexport const WordCharSet = defineCharSet(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_\");\nexport const WhiteSpaceCharSet = defineCharSet(\"\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff\");\n\nfunction quantify(nfa: NFA, min: number, max: number): NFA {\n    var result = nfa.copy();\n    result.quantify(min, max);\n    return result;\n};\n\nfunction nfaFromCharSet(charSet: CharSet): NFA {\n    const result = NFA.empty({ maxCharacter: charSet.maximum });\n    if (!charSet.isEmpty) {\n        const nodes = result.nodes;\n        const final = nodes.createNode();\n        nodes.linkNodes(nodes.initial, final, charSet);\n        nodes.makeFinal(final);\n    }\n    return result;\n}\n\nfunction charSetFromRange(min: number, max: number): CharSet {\n    if (min > max) {\n        throw new RangeError(\n            `The range [min=${min}, max=${max}] is invalid.`\n        );\n    }\n    return CharSet.empty(MaxCharacter).union([{ min, max }]);\n}\n\nfunction charSetFromChar(char: number): CharSet {\n    return CharSet.fromCharacters(MaxCharacter, [char]);\n}\n\nexport const Parser = P.createLanguage<{\n    STAR: '*'\n    PIPE: '|'\n    TILDE: '~'\n    PLUS: '+'\n    OPTIONAL: '?'\n    PARENTH_LEFT: '('\n    PARENTH_RIGHT: ')'\n    BRACKET_LEFT: '['\n    BRACKET_RIGHT: ']'\n    CARET: '^'\n    DASH: '-'\n    DOT: '.'\n    NON_META: number\n    ESCAPED_META: number\n    CLASSES: CharSet\n    SPECIAL: number\n    SET_NON_META: number\n    SET_ESCAPED_META: number\n\n    regex: NFA\n    union: NFA\n    level3: NFA\n    concatenation: NFA\n    level2: NFA\n    intersection: NFA\n    level1: NFA\n    star: NFA\n    plus: NFA\n    optional: NFA\n    level0: NFA\n    group: NFA\n    text: NFA\n    char: number\n    any: CharSet\n    positive_set: CharSet\n    negative_set: CharSet\n    set: CharSet\n    set_concatenation: CharSet\n    set_item: CharSet\n    set_char: number\n    range: CharSet\n}>({\n    STAR: () => P.string('*'),\n    PIPE: () => P.string('|'),\n    TILDE: () => P.string('~'),\n    PLUS: () => P.string('+'),\n    OPTIONAL: () => P.string('?'),\n    PARENTH_LEFT: () => P.string('('),\n    PARENTH_RIGHT: () => P.string(')'),\n    BRACKET_LEFT: () => P.string('['),\n    BRACKET_RIGHT: () => P.string(']'),\n    CARET: () => P.string('^'),\n    DASH: () => P.string('-'),\n    DOT: () => P.string('.'),\n    NON_META: () => P.regexp(/[^\\\\(){}[\\]|*+?.!~]/).map(s => s.charCodeAt(0)),\n    ESCAPED_META: () => P.regexp(/\\\\[\\\\(){}[\\]|*+?.!~]/).map(s => s.charCodeAt(1)),\n    CLASSES: () => P.regexp(/\\\\[dDwWsS]/).map(s => {\n        switch (s[1]) {\n            case 'd': return DigitsCharSet;\n            case 'D': return DigitsCharSet.negate();\n            case 'w': return WordCharSet;\n            case 'W': return WordCharSet.negate();\n            case 's': return WhiteSpaceCharSet;\n            case 'S': return WhiteSpaceCharSet.negate();\n            default: throw new Error(`Class ${s[1]} not implemented.`);\n        }\n    }),\n    SPECIAL: () => P.regexp(/\\\\([trnvfb0]|u[0-9]{4})/).map(s => {\n        switch (s[1]) {\n            case 't': return 9;\n            case 'r': return 13;\n            case 'n': return 10;\n            case 'v': return 11;\n            case 'b': return 8;\n            case '0': return 0;\n            case 'u': return parseInt(s.substring(2));\n            default: throw new Error(`Special character ${s[1]} not implemented.`);\n        }\n    }),\n    SET_NON_META: () => P.regexp(/[^\\\\^\\-\\]]/).map(s => s.charCodeAt(0)),\n    SET_ESCAPED_META: () => P.regexp(/\\\\[\\\\^\\-\\]]/).map(s => s.charCodeAt(1)),\n\n    regex: r => P.alt(r.union, r.level3),\n    union: r => P.seq(r.level3, r.PIPE, r.regex).map(([left, _, right]) => {\n        var result = left.copy();\n        result.union(right);\n        return result;\n    }),\n    level3: r => P.alt(r.intersection, r.level2),\n    intersection: r => P.seq(r.level2, r.TILDE, r.level3).map(([left, _, right]) => NFA.fromIntersection(left, right)),\n    level2: r => P.alt(r.concatenation, r.level1),\n    concatenation: r => P.seq(r.level1, r.level2).map(([left, right]) => {\n        var result = left.copy();\n        result.append(right);\n        return result;\n    }),\n    level1: r => P.alt(r.star, r.plus, r.optional, r.level0),\n    star: r => P.seq(r.level0, r.STAR).map(([nfa, _]) => quantify(nfa, 0, Infinity)),\n    plus: r => P.seq(r.level0, r.PLUS).map(([nfa, _]) => quantify(nfa, 1, Infinity)),\n    optional: r => P.seq(r.level0, r.OPTIONAL).map(([nfa, _]) => quantify(nfa, 0, 1)),\n    level0: r => P.alt(r.group, r.text),\n    group: r => P.seq(r.PARENTH_LEFT, r.regex, r.PARENTH_RIGHT).map(([_l, nfa, _r]) => nfa),\n    text: r => P.alt(r.CLASSES, r.any, r.positive_set, r.negative_set, r.char.map(charSetFromChar)).map(nfaFromCharSet),\n    char: r => P.alt(r.NON_META, r.ESCAPED_META, r.SPECIAL),\n    any: r => r.DOT.map(_ => CharSet.all(MaxCharacter)),\n    positive_set: r => P.seq(r.BRACKET_LEFT, r.set, r.BRACKET_RIGHT).map(([_l, set, _r]) => set),\n    negative_set: r => P.seq(r.BRACKET_LEFT, r.CARET, r.set, r.BRACKET_RIGHT).map(([_l, _c, set, _r]) => set.negate()),\n    set: r => P.alt(r.set_concatenation, r.set_item),\n    set_concatenation: r => P.seq(r.set_item, r.set).map(([left, right]) => left.union(right)),\n    set_item: r => P.alt(r.CLASSES, r.range, r.set_char.map(charSetFromChar)),\n    set_char: r => P.alt(r.SET_NON_META, r.SET_ESCAPED_META, r.SPECIAL),\n    range: r => P.seq(r.set_char, r.DASH, r.set_char).map(([min, _, max]) => charSetFromRange(min, max)),\n});\n","/*\n * Regular Expression Visualizer\n * Copyright (C) 2021  Manuel Meitinger\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { useEffect, useState, useRef } from 'react';\nimport { NFA, CharSet } from 'refa';\nimport Viz from 'viz.js'\nimport { DigitsCharSet, WhiteSpaceCharSet, WordCharSet } from './parser';\n\nconst Renderer = new (Viz as any)({ workerURL: './static/js/full.render.js' }) as Viz;\n\nconst Classes = new Map<string, CharSet>([\n    ['\\\\d', DigitsCharSet],\n    ['\\\\D', DigitsCharSet.negate()],\n    ['\\\\w', WordCharSet],\n    ['\\\\W', WordCharSet.negate()],\n    ['\\\\s', WhiteSpaceCharSet],\n    ['\\\\S', WhiteSpaceCharSet.negate()],\n]);\n\nfunction formatChar(char: number): string {\n    switch (char) {\n        case 9: return '\\t';\n        case 13: return '\\r';\n        case 10: return '\\n';\n        case 11: return '\\v';\n        case 8: return '\\b';\n        case 0: return '\\0';\n        case 32: return '<space>';\n        default: {\n            if (char > 126 || char < 32) {\n                const number = char.toString(16);\n                return `\\\\u${'0'.repeat(4 - number.length)}${number}`;\n            }\n            else {\n                return String.fromCharCode(char);\n            }\n        }\n    }\n}\n\nfunction formatCharSet(charSet: CharSet): string {\n    if (charSet.isAll) {\n        return '<any>';\n    }\n    if (charSet.isEmpty) {\n        return '<never>'; // should never occur\n    }\n\n    const classes: string[] = []\n    while (!charSet.isEmpty) {\n        let largest: { name: string, set: CharSet } | undefined\n        for (const [name, set] of Classes) {\n            if (set.isSubsetOf(charSet)) {\n                if (largest) {\n                    if (set.size < largest.set.size) {\n                        continue;\n                    }\n                }\n                largest = { name, set };\n            }\n        }\n        if (!largest) {\n            break;\n        }\n        classes.push(largest.name);\n        charSet = charSet.without(largest.set);\n    }\n\n    return classes.concat(charSet.ranges.map(range => range.min === range.max ? formatChar(range.min) : `${formatChar(range.min)}-${formatChar(range.max)}`)).join(',');\n}\n\nexport const Visualizer = ({ nfa }: { nfa: NFA | null }) => {\n    const graphHolder = useRef<HTMLDivElement>(null);\n    const [scale, setScale] = useState(100);\n    const [graph, setGraph] = useState(null as SVGSVGElement | null);\n    const [error, setError] = useState(undefined as any);\n\n    useEffect(() => {\n        let cancel = false;\n        setGraph(null);\n        setError(undefined);\n        if (nfa) {\n            Renderer.renderSVGElement(nfa.toDot(formatCharSet))\n                .then(element => cancel || setGraph(element))\n                .catch(error => cancel || setError(error));\n        }\n        return () => { cancel = true; };\n    }, [nfa]);\n\n    useEffect(() => {\n        if (graph) {\n            graph.style.transformOrigin = 'top left';\n            graph.style.transform = `scale(${scale / 100})`;\n        }\n    }, [graph, scale]);\n\n    useEffect(() => {\n        const div = graphHolder.current;\n        if (!div || !graph) {\n            return;\n        }\n        const node = div.appendChild(graph);\n        return () => { div.removeChild(node); }\n    }, [graphHolder, graph]);\n\n    return (\n        <div className=\"uk-card uk-card-default\">\n            <div className=\"uk-card-header\">\n                <div className=\"uk-grid-small\" data-uk-grid>\n                    <div className=\"uk-width-auto@m\">\n                        <h3 className=\"uk-card-title\">Visualization</h3>\n                    </div>\n                    <div className=\"uk-width-expand@m uk-text-right\">\n                        <div className=\"uk-button-group\">\n                            <button disabled={!graph || scale === 100} className=\"uk-button uk-button-default uk-button-small\" onClick={() => setScale(Math.max(scale - 10, 100))}><span data-uk-icon=\"minus-circle\"></span></button>\n                            <button disabled={!graph} className=\"uk-button uk-button-default uk-button-small\" onClick={() => setScale(scale + 10)}><span data-uk-icon=\"plus-circle\"></span></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"uk-card-body\">\n                <div className={`uk-background-${graph ? 'default' : 'muted'}`} style={{ overflow: 'auto' }} data-uk-height-viewport=\"expand: true\">\n                    {error && <span className=\"uk-text-danger\">{error}</span>}\n                    {nfa && !(graph || error) && <div className=\"uk-position-center\" data-uk-spinner=\"ratio: 2\"></div>}\n                    <div ref={graphHolder}></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import \"./../node_modules/uikit/dist/css/uikit.min.css\";\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nUIkit.use(Icons);\n","/*\n * Regular Expression Visualizer\n * Copyright (C) 2021  Manuel Meitinger\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { render } from \"react-dom\";\nimport { Parser } from \"./parser\";\n\nimport { Visualizer } from \"./visualizer\";\nimport { useState, useCallback } from \"react\";\nimport { NFA } from \"refa\";\n\nimport './uikitloader.js';\n\nconst App = () => {\n    const [nfa, setNfa] = useState(null as NFA | null);\n    const [error, setError] = useState(null as string | null);\n    const [text, setText] = useState('');\n\n    function parse(s: string) {\n        setNfa(null);\n        setError(null);\n        if (s) {\n            try {\n                setNfa(Parser.regex.tryParse(s));\n            }\n            catch (error) {\n                setError(String(error));\n            }\n        }\n    }\n\n    const test = useCallback(\n        () => {\n            const word = new Array<number>(text.length);\n            for (let i = 0; i < text.length; i++) {\n                word[i] = text.charCodeAt(i);\n            }\n            return nfa?.test(word);\n        },\n        [nfa, text],\n    );\n\n    return (\n        <>\n            <div className=\"uk-margin-top uk-margin-left uk-margin-right uk-margin-bottom\">\n                <div className=\"uk-grid-small uk-grid-match\" data-uk-grid>\n                    <div className=\"uk-width-2-3\">\n                        <div className=\"uk-card uk-card-default\">\n                            <div className=\"uk-card-header\">\n                                <h3 className=\"uk-card-title\">Regular Expression</h3>\n                            </div>\n                            <div className=\"uk-card-body\">\n                                <div>\n                                    <div className=\"uk-grid-small uk-grid-match\" data-uk-grid>\n                                        <div className=\"uk-width-3-5\">\n                                            <input className={`uk-input ${nfa ? 'uk-form-success' : error ? 'uk-form-danger' : ''}`} type=\"text\" onInput={e => parse(e.currentTarget.value)} />\n                                        </div>\n                                        <div className=\"uk-width-auto\">\n                                            <span className={`uk-text-large uk-text-${nfa ? 'primary' : 'muted'}`}>test</span>\n                                        </div>\n                                        <div className=\"uk-width-expand\">\n                                            <div className=\"uk-inline\">\n                                                {test() !== undefined && <span className={`uk-form-icon uk-text-${test() ? 'success' : 'danger'}`} uk-icon={test() ? 'check' : 'close'}></span>}\n                                                <input disabled={!nfa} className=\"uk-input\" type=\"text\" value={text} onInput={e => setText(e.currentTarget.value)} />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        {error && <span className=\"uk-text-danger\">{error}</span>}\n                                        {nfa?.isEmpty ? <span className=\"uk-label uk-label-warning\">Empty</span> : nfa?.isFinite ? <span className=\"uk-label uk-label-default\">Finite</span> : <span>&nbsp;</span>}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"uk-width-1-3\">\n                        <div className=\"uk-card uk-card-default\" >\n                            <div className=\"uk-card-header\">\n                                <h3 className=\"uk-card-title\">Usage</h3>\n                            </div>\n                            <div className=\"uk-card-body\">\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"uk-width-1-1\">\n                        <Visualizer nfa={nfa} />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}