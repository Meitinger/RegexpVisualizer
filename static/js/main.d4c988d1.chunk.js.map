{"version":3,"sources":["parser.ts","visualizer.tsx","uikitloader.js","index.tsx"],"names":["MaxCharacter","defineCharSet","s","CharSet","fromCharacters","split","map","c","charCodeAt","sort","a","b","DigitsCharSet","WordCharSet","WhiteSpaceCharSet","quantify","nfa","min","max","result","copy","nfaFromCharSet","charSet","NFA","empty","maxCharacter","maximum","isEmpty","nodes","final","createNode","linkNodes","initial","makeFinal","charSetFromChar","char","Parser","P","STAR","PIPE","TILDE","PLUS","OPTIONAL","NOT","PARENTH_LEFT","PARENTH_RIGHT","BRACKET_LEFT","BRACKET_RIGHT","CURLY_LEFT","CURLY_RIGHT","CARET","DASH","DOT","COMMA","NON_META","ESCAPED_META","CLASSES","negate","Error","SPECIAL","parseInt","substring","SET_NON_META","SET_ESCAPED_META","regex","r","union","level4","left","right","intersection","level3","fromIntersection","concatenation","level2","append","star","plus","optional","repeat","level1","Infinity","repeat_range","repeat_fixed","range","optional_number","number","n","length","negation","level0","dfa","DFA","fromFA","complement","group","text","any","positive_set","negative_set","_","all","set","set_concatenation","set_item","set_char","RangeError","charSetFromRange","Renderer","Viz","workerURL","Classes","Map","formatChar","toString","String","fromCharCode","formatCharSet","isAll","size","classes","largest","name","isSubsetOf","push","without","concat","ranges","join","Visualizer","graphHolder","useRef","useState","scale","setScale","graph","setGraph","undefined","error","setError","useEffect","cancel","renderSVGElement","toDot","then","element","catch","style","transformOrigin","transform","div","current","node","appendChild","removeChild","className","disabled","onClick","Math","ref","UIkit","use","Icons","App","setNfa","setText","test","useCallback","word","Array","i","href","target","rel","type","onInput","e","tryParse","parse","currentTarget","value","isFinite","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4c988d1.chunk.js","sourcesContent":["/*\n * Regular Expression Visualizer\n * Copyright (C) 2021  Manuel Meitinger\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as P from \"parsimmon\"\nimport { CharSet, DFA, NFA } from \"refa\";\n\nconst MaxCharacter = 0xFFFF;\n\nfunction defineCharSet(s: string): CharSet {\n    return CharSet.fromCharacters(MaxCharacter, s.split('').map(c => c.charCodeAt(0)).sort((a, b) => a - b));\n}\n\nexport const DigitsCharSet = defineCharSet(\"0123456789\");\nexport const WordCharSet = defineCharSet(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_\");\nexport const WhiteSpaceCharSet = defineCharSet(\"\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff\");\n\nfunction quantify(nfa: NFA, min: number, max: number): NFA {\n    var result = nfa.copy();\n    result.quantify(min, max);\n    return result;\n};\n\nfunction nfaFromCharSet(charSet: CharSet): NFA {\n    const result = NFA.empty({ maxCharacter: charSet.maximum });\n    if (!charSet.isEmpty) {\n        const nodes = result.nodes;\n        const final = nodes.createNode();\n        nodes.linkNodes(nodes.initial, final, charSet);\n        nodes.makeFinal(final);\n    }\n    return result;\n}\n\nfunction charSetFromRange(min: number, max: number): CharSet {\n    if (min > max) {\n        throw new RangeError(\n            `The range [min=${min}, max=${max}] is invalid.`\n        );\n    }\n    return CharSet.empty(MaxCharacter).union([{ min, max }]);\n}\n\nfunction charSetFromChar(char: number): CharSet {\n    return CharSet.fromCharacters(MaxCharacter, [char]);\n}\n\nexport const Parser = P.createLanguage<{\n    STAR: '*'\n    PIPE: '|'\n    TILDE: '~'\n    PLUS: '+'\n    OPTIONAL: '?'\n    NOT: '!'\n    PARENTH_LEFT: '('\n    PARENTH_RIGHT: ')'\n    BRACKET_LEFT: '['\n    BRACKET_RIGHT: ']'\n    CURLY_LEFT: '{'\n    CURLY_RIGHT: '}'\n    CARET: '^'\n    DASH: '-'\n    DOT: '.'\n    COMMA: ','\n    NON_META: number\n    ESCAPED_META: number\n    CLASSES: CharSet\n    SPECIAL: number\n    SET_NON_META: number\n    SET_ESCAPED_META: number\n\n    regex: NFA\n    union: NFA\n    level4: NFA\n    concatenation: NFA\n    level3: NFA\n    intersection: NFA\n    level2: NFA\n    star: NFA\n    plus: NFA\n    optional: NFA\n    repeat: NFA\n    repeat_range: { min: number, max: number }\n    repeat_fixed: { min: number, max: number }\n    number: number\n    optional_number: number | null\n    level1: NFA\n    negation: NFA\n    level0: NFA\n    group: NFA\n    text: NFA\n    char: number\n    any: CharSet\n    positive_set: CharSet\n    negative_set: CharSet\n    set: CharSet\n    set_concatenation: CharSet\n    set_item: CharSet\n    set_char: number\n    range: CharSet\n}>({\n    STAR: () => P.string('*'),\n    PIPE: () => P.string('|'),\n    TILDE: () => P.string('~'),\n    PLUS: () => P.string('+'),\n    OPTIONAL: () => P.string('?'),\n    NOT: () => P.string('!'),\n    PARENTH_LEFT: () => P.string('('),\n    PARENTH_RIGHT: () => P.string(')'),\n    BRACKET_LEFT: () => P.string('['),\n    BRACKET_RIGHT: () => P.string(']'),\n    CURLY_LEFT: () => P.string('{'),\n    CURLY_RIGHT: () => P.string('}'),\n    CARET: () => P.string('^'),\n    DASH: () => P.string('-'),\n    DOT: () => P.string('.'),\n    COMMA: () => P.string(','),\n    NON_META: () => P.regexp(/[^\\\\(){}[\\]|*+?.~!]/).map(s => s.charCodeAt(0)),\n    ESCAPED_META: () => P.regexp(/\\\\[\\\\(){}[\\]|*+?.~!]/).map(s => s.charCodeAt(1)),\n    CLASSES: () => P.regexp(/\\\\[dDwWsS]/).map(s => {\n        switch (s[1]) {\n            case 'd': return DigitsCharSet;\n            case 'D': return DigitsCharSet.negate();\n            case 'w': return WordCharSet;\n            case 'W': return WordCharSet.negate();\n            case 's': return WhiteSpaceCharSet;\n            case 'S': return WhiteSpaceCharSet.negate();\n            default: throw new Error(`Class ${s[1]} not implemented.`);\n        }\n    }),\n    SPECIAL: () => P.regexp(/\\\\([trnvfb0]|u[0-9]{4})/).map(s => {\n        switch (s[1]) {\n            case 't': return 9;\n            case 'r': return 13;\n            case 'n': return 10;\n            case 'v': return 11;\n            case 'f': return 12;\n            case 'b': return 8;\n            case '0': return 0;\n            case 'u': return parseInt(s.substring(2));\n            default: throw new Error(`Special character ${s[1]} not implemented.`);\n        }\n    }),\n    SET_NON_META: () => P.regexp(/[^\\\\^\\-\\]]/).map(s => s.charCodeAt(0)),\n    SET_ESCAPED_META: () => P.regexp(/\\\\[\\\\^\\-\\]]/).map(s => s.charCodeAt(1)),\n\n    regex: r => P.alt(r.union, r.level4),\n    union: r => P.seq(r.level4, r.PIPE, r.regex).map(([left, _, right]) => {\n        var result = left.copy();\n        result.union(right);\n        return result;\n    }),\n    level4: r => P.alt(r.intersection, r.level3),\n    intersection: r => P.seq(r.level3, r.TILDE, r.level4).map(([left, _, right]) => NFA.fromIntersection(left, right)),\n    level3: r => P.alt(r.concatenation, r.level2),\n    concatenation: r => P.seq(r.level2, r.level3).map(([left, right]) => {\n        var result = left.copy();\n        result.append(right);\n        return result;\n    }),\n    level2: r => P.alt(r.star, r.plus, r.optional, r.repeat, r.level1),\n    star: r => P.seq(r.level1, r.STAR).map(([nfa, _]) => quantify(nfa, 0, Infinity)),\n    plus: r => P.seq(r.level1, r.PLUS).map(([nfa, _]) => quantify(nfa, 1, Infinity)),\n    optional: r => P.seq(r.level1, r.OPTIONAL).map(([nfa, _]) => quantify(nfa, 0, 1)),\n    repeat: r => P.seq(r.level1, r.CURLY_LEFT, P.alt(r.repeat_range, r.repeat_fixed), r.CURLY_RIGHT).map(([nfa, _l, range, _r]) => quantify(nfa, range.min, range.max)),\n    repeat_range: r => P.seq(r.optional_number, r.COMMA, r.optional_number).map(([min, _, max]) => ({ min: min ?? 0, max: max ?? Infinity })),\n    repeat_fixed: r => r.number.map(n => ({ min: n, max: n })),\n    number: () => P.regexp(/0|[1-9][0-9]*/).map(parseInt),\n    optional_number: () => P.regexp(/(0|[1-9][0-9]*)?/).map(s => s.length > 0 ? parseInt(s) : null),\n    level1: r => P.alt(r.negation, r.level0),\n    negation: r => P.seq(r.NOT, r.level0).map(([_, nfa]) => {\n        const dfa = DFA.fromFA(nfa);\n        dfa.complement();\n        return NFA.fromFA(dfa);\n    }),\n    level0: r => P.alt(r.group, r.text),\n    group: r => P.seq(r.PARENTH_LEFT, r.regex, r.PARENTH_RIGHT).map(([_l, nfa, _r]) => nfa),\n    text: r => P.alt(r.CLASSES, r.any, r.positive_set, r.negative_set, r.char.map(charSetFromChar)).map(nfaFromCharSet),\n    char: r => P.alt(r.NON_META, r.ESCAPED_META, r.SPECIAL),\n    any: r => r.DOT.map(_ => CharSet.all(MaxCharacter)),\n    positive_set: r => P.seq(r.BRACKET_LEFT, r.set, r.BRACKET_RIGHT).map(([_l, set, _r]) => set),\n    negative_set: r => P.seq(r.BRACKET_LEFT, r.CARET, r.set, r.BRACKET_RIGHT).map(([_l, _c, set, _r]) => set.negate()),\n    set: r => P.alt(r.set_concatenation, r.set_item),\n    set_concatenation: r => P.seq(r.set_item, r.set).map(([left, right]) => left.union(right)),\n    set_item: r => P.alt(r.CLASSES, r.range, r.set_char.map(charSetFromChar)),\n    set_char: r => P.alt(r.SET_NON_META, r.SET_ESCAPED_META, r.SPECIAL),\n    range: r => P.seq(r.set_char, r.DASH, r.set_char).map(([min, _, max]) => charSetFromRange(min, max)),\n});\n","/*\n * Regular Expression Visualizer\n * Copyright (C) 2021  Manuel Meitinger\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { useEffect, useState, useRef } from 'react';\nimport { NFA, CharSet } from 'refa';\nimport Viz from 'viz.js'\nimport { DigitsCharSet, WhiteSpaceCharSet, WordCharSet } from './parser';\n\nconst Renderer = new (Viz as any)({ workerURL: '/regex_viz/static/js/full.render.js' }) as Viz;\n\nconst Classes = new Map<string, CharSet>([\n    ['\\\\d', DigitsCharSet],\n    ['\\\\D', DigitsCharSet.negate()],\n    ['\\\\w', WordCharSet],\n    ['\\\\W', WordCharSet.negate()],\n    ['\\\\s', WhiteSpaceCharSet],\n    ['\\\\S', WhiteSpaceCharSet.negate()],\n]);\n\nfunction formatChar(char: number): string {\n    switch (char) {\n        case 9: return '\\t';\n        case 13: return '\\r';\n        case 10: return '\\n';\n        case 11: return '\\v';\n        case 12: return '\\f';\n        case 8: return '\\b';\n        case 0: return '\\0';\n        case 32: return '<space>';\n        default: {\n            if (char > 126 || char < 32) {\n                const number = char.toString(16);\n                return `\\\\u${'0'.repeat(4 - number.length)}${number}`;\n            }\n            else {\n                return String.fromCharCode(char);\n            }\n        }\n    }\n}\n\nfunction formatCharSet(charSet: CharSet): string {\n    if (charSet.isAll) {\n        return 'any';\n    }\n    if (charSet.isEmpty) {\n        return 'never'; // should never occur\n    }\n    if (charSet.size * 2 > charSet.maximum) {\n        return `not ${formatCharSet(charSet.negate())}`;\n    }\n\n    const classes: string[] = []\n    while (!charSet.isEmpty) {\n        let largest: { name: string, set: CharSet } | undefined\n        for (const [name, set] of Classes) {\n            if (set.isSubsetOf(charSet)) {\n                if (largest) {\n                    if (set.size < largest.set.size) {\n                        continue;\n                    }\n                }\n                largest = { name, set };\n            }\n        }\n        if (!largest) {\n            break;\n        }\n        classes.push(largest.name);\n        charSet = charSet.without(largest.set);\n    }\n\n    return classes.concat(charSet.ranges.map(range => range.min === range.max ? formatChar(range.min) : `${formatChar(range.min)}-${formatChar(range.max)}`)).join(',');\n}\n\nexport const Visualizer = ({ nfa }: { nfa: NFA | null }) => {\n    const graphHolder = useRef<HTMLDivElement>(null);\n    const [scale, setScale] = useState(100);\n    const [graph, setGraph] = useState(null as SVGSVGElement | null);\n    const [error, setError] = useState(undefined as any);\n\n    useEffect(() => {\n        let cancel = false;\n        setGraph(null);\n        setError(undefined);\n        if (nfa) {\n            Renderer.renderSVGElement(nfa.toDot(formatCharSet))\n                .then(element => cancel || setGraph(element))\n                .catch(error => cancel || setError(error));\n        }\n        return () => { cancel = true; };\n    }, [nfa]);\n\n    useEffect(() => {\n        if (graph) {\n            graph.style.transformOrigin = 'top left';\n            graph.style.transform = `scale(${scale / 100})`;\n        }\n    }, [graph, scale]);\n\n    useEffect(() => {\n        const div = graphHolder.current;\n        if (!div || !graph) {\n            return;\n        }\n        const node = div.appendChild(graph);\n        return () => { div.removeChild(node); }\n    }, [graphHolder, graph]);\n\n    return (\n        <div className=\"uk-card uk-card-default\">\n            <div className=\"uk-card-header\">\n                <div className=\"uk-grid-small\" data-uk-grid>\n                    <div className=\"uk-width-auto\">\n                        <h3 className=\"uk-card-title\">Visualization</h3>\n                    </div>\n                    <div className=\"uk-width-expand uk-text-right\">\n                        <div className=\"uk-button-group\">\n                            <button disabled={!graph || scale === 100} className=\"uk-button uk-button-default uk-button-small\" onClick={() => setScale(Math.max(scale - 10, 100))}><span data-uk-icon=\"minus-circle\"></span></button>\n                            <button disabled={!graph} className=\"uk-button uk-button-default uk-button-small\" onClick={() => setScale(scale + 10)}><span data-uk-icon=\"plus-circle\"></span></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"uk-card-body\">\n                <div className={`uk-overflow-auto uk-background-${graph ? 'default' : 'muted'}`} data-uk-height-viewport=\"expand: true\">\n                    {error && <span className=\"uk-text-danger\">{error}</span>}\n                    {nfa && !(graph || error) && <div className=\"uk-position-center\" data-uk-spinner=\"ratio: 2\"></div>}\n                    <div ref={graphHolder}></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import \"./../node_modules/uikit/dist/css/uikit.min.css\";\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nUIkit.use(Icons);\n","/*\n * Regular Expression Visualizer\n * Copyright (C) 2021  Manuel Meitinger\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { render } from \"react-dom\";\nimport { Parser } from \"./parser\";\n\nimport { Visualizer } from \"./visualizer\";\nimport { useState, useCallback } from \"react\";\nimport { NFA } from \"refa\";\n\nimport './uikitloader.js';\n\nconst App = () => {\n    const [nfa, setNfa] = useState(null as NFA | null);\n    const [error, setError] = useState(null as string | null);\n    const [text, setText] = useState('');\n\n    function parse(s: string) {\n        setNfa(null);\n        setError(null);\n        if (s) {\n            try {\n                setNfa(Parser.regex.tryParse(s));\n            }\n            catch (error) {\n                setError(String(error));\n            }\n        }\n    }\n\n    const test = useCallback(\n        () => {\n            const word = new Array<number>(text.length);\n            for (let i = 0; i < text.length; i++) {\n                word[i] = text.charCodeAt(i);\n            }\n            return nfa?.test(word);\n        },\n        [nfa, text],\n    );\n\n    return (\n        <>\n            <div className=\"uk-margin-top uk-margin-left uk-margin-right uk-margin-bottom\">\n                <div className=\"uk-margin uk-card uk-card-default\">\n                    <div className=\"uk-card-header\">\n                        <div className=\"uk-grid-small\" data-uk-grid>\n                            <div className=\"uk-width-auto\">\n                                <h3 className=\"uk-card-title\">Regular Expression</h3>\n                            </div>\n                            <div className=\"uk-width-expand uk-text-right\">\n                                <a className=\"uk-text-primary uk-button uk-button-text\" href=\"https://github.com/Meitinger/regex_viz/blob/main/README.md\" target=\"_blank\" rel=\"noreferrer\">Usage</a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"uk-card-body\">\n                        <div>\n                            <div className=\"uk-grid-small uk-grid-match\" data-uk-grid>\n                                <div className=\"uk-width-3-5@m\">\n                                    <input className={`uk-input ${nfa ? 'uk-form-success' : error ? 'uk-form-danger' : ''}`} type=\"text\" onInput={e => parse(e.currentTarget.value)} />\n                                </div>\n                                <div className=\"uk-width-auto@m\">\n                                    <span className={`uk-text-large uk-text-${nfa ? 'primary' : 'muted'}`}>test</span>\n                                </div>\n                                <div className=\"uk-width-expand@m\">\n                                    <div className=\"uk-inline\">\n                                        {test() !== undefined && <span className={`uk-form-icon uk-text-${test() ? 'success' : 'danger'}`} uk-icon={test() ? 'check' : 'close'}></span>}\n                                        <input disabled={!nfa} className=\"uk-input\" type=\"text\" value={text} onInput={e => setText(e.currentTarget.value)} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                {error && <span className=\"uk-text-danger\">{error}</span>}\n                                {nfa?.isEmpty ? <span className=\"uk-label uk-label-warning\">Empty</span> : nfa?.isFinite ? <span className=\"uk-label uk-label-default\">Finite</span> : <span>&nbsp;</span>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Visualizer nfa={nfa} />\n            </div>\n        </>\n    );\n};\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}